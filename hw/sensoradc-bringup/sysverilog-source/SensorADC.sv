// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

module SensorADC(
  output        auto_mmio_in_a_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input         auto_mmio_in_a_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [2:0]  auto_mmio_in_a_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_mmio_in_a_bits_param,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [1:0]  auto_mmio_in_a_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [15:0] auto_mmio_in_a_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_mmio_in_a_bits_address,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [3:0]  auto_mmio_in_a_bits_mask,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [31:0] auto_mmio_in_a_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input         auto_mmio_in_a_bits_corrupt,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_mmio_in_d_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output        auto_mmio_in_d_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [2:0]  auto_mmio_in_d_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [1:0]  auto_mmio_in_d_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [15:0] auto_mmio_in_d_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [31:0] auto_mmio_in_d_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input         auto_clock_in_clock,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_clock_in_reset,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [5:0]  io_adc_counter_p,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:199:26]
                io_adc_counter_n,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:199:26]
  output [31:0] io_tuning_adc_tuning,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:199:26]
  output        io_adc_sensor_out,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:199:26]
  input         io_adc_clock	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:199:26]
);

  wire        _sensorADCBackend_io_backend_status_status0_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [31:0] _sensorADCBackend_io_backend_status_status0_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [31:0] _sensorADCBackend_io_backend_status_status1_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [31:0] _sensorADCBackend_io_backend_status_status2_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [31:0] _sensorADCBackend_io_backend_status_status3_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [31:0] _sensorADCBackend_io_backend_status_status4_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [31:0] _sensorADCBackend_io_backend_status_status5_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire        _sensorADCBackend_io_backend_adc_data_out_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire [19:0] _sensorADCBackend_io_backend_adc_data_out_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
  wire        _sensorADCFrontend_io_backend_status_status0_ready;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire        _sensorADCFrontend_io_backend_adc_data_out_ready;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire        _sensorADCFrontend_io_backend_chopper_control_chopper_div_1_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire [24:0] _sensorADCFrontend_io_backend_chopper_control_chopper_div_1_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire        _sensorADCFrontend_io_backend_chopper_control_chopper_div_2_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire [24:0] _sensorADCFrontend_io_backend_chopper_control_chopper_div_2_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire        _sensorADCFrontend_io_backend_chopper_control_chopper_clock_en_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire [1:0]  _sensorADCFrontend_io_backend_chopper_control_chopper_clock_en_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire        _sensorADCFrontend_io_backend_dsp_control_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire [7:0]  _sensorADCFrontend_io_backend_dsp_control_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire        _sensorADCFrontend_io_backend_auto_mux;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  wire [31:0] _sensorADCFrontend_io_tuning_adc_tuning;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  SensorADCFrontend sensorADCFrontend (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .clock                                             (auto_clock_in_clock),
    .reset                                             (auto_clock_in_reset),
    .auto_control_xing_in_a_ready                      (auto_mmio_in_a_ready),
    .auto_control_xing_in_a_valid                      (auto_mmio_in_a_valid),
    .auto_control_xing_in_a_bits_opcode                (auto_mmio_in_a_bits_opcode),
    .auto_control_xing_in_a_bits_param                 (auto_mmio_in_a_bits_param),
    .auto_control_xing_in_a_bits_size                  (auto_mmio_in_a_bits_size),
    .auto_control_xing_in_a_bits_source                (auto_mmio_in_a_bits_source),
    .auto_control_xing_in_a_bits_address               (auto_mmio_in_a_bits_address),
    .auto_control_xing_in_a_bits_mask                  (auto_mmio_in_a_bits_mask),
    .auto_control_xing_in_a_bits_data                  (auto_mmio_in_a_bits_data),
    .auto_control_xing_in_a_bits_corrupt               (auto_mmio_in_a_bits_corrupt),
    .auto_control_xing_in_d_ready                      (auto_mmio_in_d_ready),
    .auto_control_xing_in_d_valid                      (auto_mmio_in_d_valid),
    .auto_control_xing_in_d_bits_opcode                (auto_mmio_in_d_bits_opcode),
    .auto_control_xing_in_d_bits_size                  (auto_mmio_in_d_bits_size),
    .auto_control_xing_in_d_bits_source                (auto_mmio_in_d_bits_source),
    .auto_control_xing_in_d_bits_data                  (auto_mmio_in_d_bits_data),
    .io_backend_status_status0_ready                   (_sensorADCFrontend_io_backend_status_status0_ready),
    .io_backend_status_status0_valid                   (_sensorADCBackend_io_backend_status_status0_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_status_status0_bits                    (_sensorADCBackend_io_backend_status_status0_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_status_status1_bits                    (_sensorADCBackend_io_backend_status_status1_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_status_status2_bits                    (_sensorADCBackend_io_backend_status_status2_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_status_status3_bits                    (_sensorADCBackend_io_backend_status_status3_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_status_status4_bits                    (_sensorADCBackend_io_backend_status_status4_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_status_status5_bits                    (_sensorADCBackend_io_backend_status_status5_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_adc_data_out_ready                     (_sensorADCFrontend_io_backend_adc_data_out_ready),
    .io_backend_adc_data_out_valid                     (_sensorADCBackend_io_backend_adc_data_out_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_adc_data_out_bits                      (_sensorADCBackend_io_backend_adc_data_out_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .io_backend_chopper_control_chopper_div_1_valid    (_sensorADCFrontend_io_backend_chopper_control_chopper_div_1_valid),
    .io_backend_chopper_control_chopper_div_1_bits     (_sensorADCFrontend_io_backend_chopper_control_chopper_div_1_bits),
    .io_backend_chopper_control_chopper_div_2_valid    (_sensorADCFrontend_io_backend_chopper_control_chopper_div_2_valid),
    .io_backend_chopper_control_chopper_div_2_bits     (_sensorADCFrontend_io_backend_chopper_control_chopper_div_2_bits),
    .io_backend_chopper_control_chopper_clock_en_valid (_sensorADCFrontend_io_backend_chopper_control_chopper_clock_en_valid),
    .io_backend_chopper_control_chopper_clock_en_bits  (_sensorADCFrontend_io_backend_chopper_control_chopper_clock_en_bits),
    .io_backend_dsp_control_valid                      (_sensorADCFrontend_io_backend_dsp_control_valid),
    .io_backend_dsp_control_bits                       (_sensorADCFrontend_io_backend_dsp_control_bits),
    .io_backend_auto_mux                               (_sensorADCFrontend_io_backend_auto_mux),
    .io_tuning_adc_tuning                              (_sensorADCFrontend_io_tuning_adc_tuning)
  );
  SensorADCBackend sensorADCBackend (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:203:36]
    .clock                                             (auto_clock_in_clock),
    .reset                                             (auto_clock_in_reset),
    .io_backend_status_status0_ready                   (_sensorADCFrontend_io_backend_status_status0_ready),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_status_status0_valid                   (_sensorADCBackend_io_backend_status_status0_valid),
    .io_backend_status_status0_bits                    (_sensorADCBackend_io_backend_status_status0_bits),
    .io_backend_status_status1_bits                    (_sensorADCBackend_io_backend_status_status1_bits),
    .io_backend_status_status2_bits                    (_sensorADCBackend_io_backend_status_status2_bits),
    .io_backend_status_status3_bits                    (_sensorADCBackend_io_backend_status_status3_bits),
    .io_backend_status_status4_bits                    (_sensorADCBackend_io_backend_status_status4_bits),
    .io_backend_status_status5_bits                    (_sensorADCBackend_io_backend_status_status5_bits),
    .io_backend_adc_data_out_ready                     (_sensorADCFrontend_io_backend_adc_data_out_ready),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_adc_data_out_valid                     (_sensorADCBackend_io_backend_adc_data_out_valid),
    .io_backend_adc_data_out_bits                      (_sensorADCBackend_io_backend_adc_data_out_bits),
    .io_backend_chopper_control_chopper_div_1_valid    (_sensorADCFrontend_io_backend_chopper_control_chopper_div_1_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_chopper_control_chopper_div_1_bits     (_sensorADCFrontend_io_backend_chopper_control_chopper_div_1_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_chopper_control_chopper_div_2_valid    (_sensorADCFrontend_io_backend_chopper_control_chopper_div_2_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_chopper_control_chopper_div_2_bits     (_sensorADCFrontend_io_backend_chopper_control_chopper_div_2_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_chopper_control_chopper_clock_en_valid (_sensorADCFrontend_io_backend_chopper_control_chopper_clock_en_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_chopper_control_chopper_clock_en_bits  (_sensorADCFrontend_io_backend_chopper_control_chopper_clock_en_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_dsp_control_valid                      (_sensorADCFrontend_io_backend_dsp_control_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_dsp_control_bits                       (_sensorADCFrontend_io_backend_dsp_control_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_backend_auto_mux                               (_sensorADCFrontend_io_backend_auto_mux),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
    .io_analog_adc_counter_p                           (io_adc_counter_p),
    .io_analog_adc_counter_n                           (io_adc_counter_n),
    .io_analog_tuning_adc_tuning                       (io_tuning_adc_tuning),
    .io_analog_adc_sensor_out                          (io_adc_sensor_out),
    .io_analog_adc_clock                               (io_adc_clock),
    .io_frontendTuning_adc_tuning                      (_sensorADCFrontend_io_tuning_adc_tuning)	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADC.scala:194:37]
  );
endmodule


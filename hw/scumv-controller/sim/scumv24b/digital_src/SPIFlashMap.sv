// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module SPIFlashMap(
  input         clock,
                reset,
                io_en,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [1:0]  io_ctrl_insn_cmd_proto,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [7:0]  io_ctrl_insn_cmd_code,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_ctrl_insn_cmd_en,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [1:0]  io_ctrl_insn_addr_proto,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [2:0]  io_ctrl_insn_addr_len,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [7:0]  io_ctrl_insn_pad_code,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [3:0]  io_ctrl_insn_pad_cnt,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [1:0]  io_ctrl_insn_data_proto,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_ctrl_fmt_endian,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output        io_addr_ready,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_addr_valid,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [31:0] io_addr_bits_next,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
                io_addr_bits_hold,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_data_ready,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output        io_data_valid,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output [7:0]  io_data_bits,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_link_tx_ready,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output        io_link_tx_valid,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output [7:0]  io_link_tx_bits,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_link_rx_valid,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input  [7:0]  io_link_rx_bits,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output [7:0]  io_link_cnt,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output [1:0]  io_link_fmt_proto,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output        io_link_fmt_endian,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
                io_link_fmt_iodir,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
                io_link_cs_clear,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  input         io_link_active,	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
  output        io_link_lock	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:50:14]
);

  wire [1:0]      io_link_fmt_proto_0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:64:21, :97:18]
  wire            cnt_en;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:82:27, :97:18]
  wire            merge = io_link_active & io_addr_bits_next == io_addr_bits_hold + 32'h1;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:58:32, :59:{30,52}]
  reg  [3:0]      cnt;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16]
  wire            cnt_cmp_1 = cnt == 4'h1;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16, :83:48]
  reg  [2:0]      state;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22]
  wire            io_addr_ready_0 = state == 3'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18]
  wire            _GEN = state == 3'h1;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, :106:25]
  wire            _GEN_0 = state == 3'h2;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, :106:25]
  wire            _GEN_1 = io_addr_ready_0 | _GEN;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:82:27, :97:18]
  assign cnt_en = ~_GEN_1 & _GEN_0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:82:27, :97:18]
  wire            _GEN_2 = state == 3'h3;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, :140:15]
  wire            _GEN_3 = state == 3'h4;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, src/main/scala/chisel3/util/Mux.scala:30:73]
  wire            _GEN_4 = _GEN_0 | _GEN_2;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:64:21, :97:18]
  assign io_link_fmt_proto_0 = io_addr_ready_0 ? io_ctrl_insn_addr_proto : _GEN ? io_ctrl_insn_cmd_proto : _GEN_4 | ~_GEN_3 ? io_ctrl_insn_addr_proto : io_ctrl_insn_data_proto;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:64:21, :97:18, :122:25]
  wire            _GEN_5 = state == 3'h5;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, :157:15]
  wire            _GEN_6 = _GEN | _GEN_0 | _GEN_2 | _GEN_3;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:87:17, :97:18]
  wire            io_link_tx_valid_0 = ~io_addr_ready_0 & (_GEN_6 | ~_GEN_5) & (~cnt_en | (|cnt));	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:62:20, :74:16, :81:16, :82:27, :83:48, :87:17, :88:22, :97:18, :99:24, :100:20, :162:24]
  wire            _GEN_7 = state == 3'h6;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, :116:17]
  wire            io_data_valid_0 = ~(io_addr_ready_0 | _GEN_6) & (_GEN_5 ? io_link_rx_valid : _GEN_7);	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:78:17, :87:17, :97:18, :163:21]
  wire [2:0]      _GEN_8 = (_GEN_5 ? io_data_ready & io_data_valid_0 : _GEN_7 & io_data_ready) ? 3'h0 : state;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:78:17, :95:22, :97:18, :164:27, :165:15, :172:28, :173:15, src/main/scala/chisel3/util/Decoupled.scala:52:35]
  wire [7:0][2:0] _GEN_9 = {{_GEN_8}, {_GEN_8}, {_GEN_8}, {io_link_tx_ready ? 3'h5 : state}, {io_link_tx_ready ? 3'h4 : state}, {cnt_cmp_1 & io_link_tx_ready | ~(|cnt) ? 3'h3 : state}, {io_link_tx_ready ? 3'h2 : state}, {io_addr_valid ? (io_en ? (merge ? 3'h4 : io_ctrl_insn_cmd_en ? 3'h1 : 3'h2) : 3'h6) : state}};	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:59:30, :81:16, :83:48, :85:29, :86:27, :95:22, :97:18, :100:20, :102:30, :103:24, :104:19, :106:{19,25}, :115:30, :116:17, :124:31, :125:15, :139:23, :140:15, :148:31, :149:15, :156:31, :157:15, :164:27, src/main/scala/chisel3/util/Mux.scala:30:73]
  always @(posedge clock) begin
    if (io_addr_ready_0 | ~(_GEN & io_link_tx_ready)) begin	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:87:17, :97:18, :124:31, :126:13]
      if (cnt_en & io_link_tx_ready & io_link_tx_valid_0)	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16, :82:27, :87:17, :89:28, :90:11, :97:18, :99:24]
        cnt <= cnt - 4'h1;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16, :90:18]
    end
    else	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:87:17, :97:18]
      cnt <= {1'h0, io_ctrl_insn_addr_len};	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16, :126:13]
    if (reset)
      state <= 3'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22]
    else
      state <= _GEN_9[state];	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:95:22, :97:18, :100:20, :124:31, :139:23, :148:31, :156:31]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;
        cnt = _RANDOM[/*Zero width*/ 1'b0][3:0];	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16]
        state = _RANDOM[/*Zero width*/ 1'b0][6:4];	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:81:16, :95:22]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_addr_ready = io_addr_ready_0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:97:18]
  assign io_data_valid = io_data_valid_0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:78:17, :97:18]
  assign io_data_bits = io_addr_ready_0 | _GEN | _GEN_0 | _GEN_2 | _GEN_3 | _GEN_5 | ~_GEN_7 ? io_link_rx_bits : 8'h0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:79:16, :97:18, src/main/scala/chisel3/util/Mux.scala:30:73]
  assign io_link_tx_valid = io_link_tx_valid_0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:97:18, :99:24]
  assign io_link_tx_bits = _GEN_1 ? io_ctrl_insn_cmd_code : _GEN_0 ? (cnt_cmp_1 ? io_addr_bits_hold[7:0] : 8'h0) | (cnt == 4'h2 ? io_addr_bits_hold[15:8] : 8'h0) | (cnt == 4'h3 ? io_addr_bits_hold[23:16] : 8'h0) | (cnt == 4'h4 ? io_addr_bits_hold[31:24] : 8'h0) : _GEN_2 ? io_ctrl_insn_pad_code : io_ctrl_insn_cmd_code;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:63:19, :81:16, :82:27, :83:48, :97:18, :123:23, :131:23, :135:33, :146:23, src/main/scala/chisel3/util/Mux.scala:30:73]
  assign io_link_cnt = {4'h0, io_addr_ready_0 | _GEN | _GEN_0 | ~_GEN_2 ? {io_link_fmt_proto_0 == 2'h0, io_link_fmt_proto_0 == 2'h1, io_link_fmt_proto_0 == 2'h2, 1'h0} : io_ctrl_insn_pad_cnt};	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIConsts.scala:12:48, generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:64:21, :67:15, :97:18, src/main/scala/chisel3/util/Mux.scala:30:73]
  assign io_link_fmt_proto = io_link_fmt_proto_0;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:64:21, :97:18]
  assign io_link_fmt_endian = io_ctrl_fmt_endian;
  assign io_link_fmt_iodir = io_addr_ready_0 | _GEN | _GEN_4 | ~_GEN_3;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:58:32, :64:21, :65:21, :97:18, :155:25, src/main/scala/chisel3/util/Mux.scala:30:73]
  assign io_link_cs_clear = io_addr_ready_0 & io_en & io_addr_valid & ~merge;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:58:32, :59:30, :72:20, :97:18, :100:20, :102:30, :103:24, :107:30, src/main/scala/chisel3/util/Mux.scala:30:73]
  assign io_link_lock = ~io_addr_ready_0 | io_en & io_addr_valid;	// @[generators/rocket-chip-blocks/src/main/scala/devices/spi/SPIFlash.scala:74:16, :97:18, :100:20, :102:30, :114:22]
endmodule


// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module SCUMVTuning(
  output        auto_mmio_in_a_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input         auto_mmio_in_a_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [2:0]  auto_mmio_in_a_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_mmio_in_a_bits_param,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [1:0]  auto_mmio_in_a_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [15:0] auto_mmio_in_a_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_mmio_in_a_bits_address,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [3:0]  auto_mmio_in_a_bits_mask,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input  [31:0] auto_mmio_in_a_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input         auto_mmio_in_a_bits_corrupt,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_mmio_in_d_ready,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output        auto_mmio_in_d_valid,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [2:0]  auto_mmio_in_d_bits_opcode,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [1:0]  auto_mmio_in_d_bits_size,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [15:0] auto_mmio_in_d_bits_source,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [31:0] auto_mmio_in_d_bits_data,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  input         auto_clock_in_clock,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
                auto_clock_in_reset,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output [8:0]  io_oscillator_tuneOut_adc_coarse,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [5:0]  io_oscillator_tuneOut_dig,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [1:0]  io_oscillator_tuneOut_cpuSel,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output        io_oscillator_reset_adc,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_oscillator_reset_dig,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [4:0]  io_supply_bgr_tempCtrl,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_supply_bgr_vrefCtrl,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_supply_currentSrc_leftCtrl,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_supply_currentSrc_rightCtrl,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output        io_supply_clkOvrd,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_rampGenerator_clkMuxSel,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_rampGenerator_enable,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [7:0]  io_radar_rampGenerator_frequencyStepStart,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_rampGenerator_numFrequencySteps,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [23:0] io_radar_rampGenerator_numCyclesPerFrequency,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [31:0] io_radar_rampGenerator_numIdleCycles,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output        io_radar_rampGenerator_rst,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [5:0]  io_radar_rampGenerator_idac_control,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [1:0]  io_radar_rampGenerator_rx_out_sel,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output [4:0]  io_radar_vco_capTuning,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
  output        io_radar_vco_enable,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_vco_divEnable,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_pa_enable,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_pa_bypass,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_pa_inputMuxSel,	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
                io_radar_clkOvrd	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:319:26]
);

  SCUMVTuningFrontend scumvtuningFrontend (	// @[generators/scumvtuning/src/main/scala/SCUMVTuning.scala:312:39]
    .clock                                        (auto_clock_in_clock),
    .reset                                        (auto_clock_in_reset),
    .auto_control_xing_in_a_ready                 (auto_mmio_in_a_ready),
    .auto_control_xing_in_a_valid                 (auto_mmio_in_a_valid),
    .auto_control_xing_in_a_bits_opcode           (auto_mmio_in_a_bits_opcode),
    .auto_control_xing_in_a_bits_param            (auto_mmio_in_a_bits_param),
    .auto_control_xing_in_a_bits_size             (auto_mmio_in_a_bits_size),
    .auto_control_xing_in_a_bits_source           (auto_mmio_in_a_bits_source),
    .auto_control_xing_in_a_bits_address          (auto_mmio_in_a_bits_address),
    .auto_control_xing_in_a_bits_mask             (auto_mmio_in_a_bits_mask),
    .auto_control_xing_in_a_bits_data             (auto_mmio_in_a_bits_data),
    .auto_control_xing_in_a_bits_corrupt          (auto_mmio_in_a_bits_corrupt),
    .auto_control_xing_in_d_ready                 (auto_mmio_in_d_ready),
    .auto_control_xing_in_d_valid                 (auto_mmio_in_d_valid),
    .auto_control_xing_in_d_bits_opcode           (auto_mmio_in_d_bits_opcode),
    .auto_control_xing_in_d_bits_size             (auto_mmio_in_d_bits_size),
    .auto_control_xing_in_d_bits_source           (auto_mmio_in_d_bits_source),
    .auto_control_xing_in_d_bits_data             (auto_mmio_in_d_bits_data),
    .io_oscillator_tuneOut_adc_coarse             (io_oscillator_tuneOut_adc_coarse),
    .io_oscillator_tuneOut_dig                    (io_oscillator_tuneOut_dig),
    .io_oscillator_tuneOut_cpuSel                 (io_oscillator_tuneOut_cpuSel),
    .io_oscillator_reset_adc                      (io_oscillator_reset_adc),
    .io_oscillator_reset_dig                      (io_oscillator_reset_dig),
    .io_supply_bgr_tempCtrl                       (io_supply_bgr_tempCtrl),
    .io_supply_bgr_vrefCtrl                       (io_supply_bgr_vrefCtrl),
    .io_supply_currentSrc_leftCtrl                (io_supply_currentSrc_leftCtrl),
    .io_supply_currentSrc_rightCtrl               (io_supply_currentSrc_rightCtrl),
    .io_supply_clkOvrd                            (io_supply_clkOvrd),
    .io_radar_rampGenerator_clkMuxSel             (io_radar_rampGenerator_clkMuxSel),
    .io_radar_rampGenerator_enable                (io_radar_rampGenerator_enable),
    .io_radar_rampGenerator_frequencyStepStart    (io_radar_rampGenerator_frequencyStepStart),
    .io_radar_rampGenerator_numFrequencySteps     (io_radar_rampGenerator_numFrequencySteps),
    .io_radar_rampGenerator_numCyclesPerFrequency (io_radar_rampGenerator_numCyclesPerFrequency),
    .io_radar_rampGenerator_numIdleCycles         (io_radar_rampGenerator_numIdleCycles),
    .io_radar_rampGenerator_rst                   (io_radar_rampGenerator_rst),
    .io_radar_rampGenerator_idac_control          (io_radar_rampGenerator_idac_control),
    .io_radar_rampGenerator_rx_out_sel            (io_radar_rampGenerator_rx_out_sel),
    .io_radar_vco_capTuning                       (io_radar_vco_capTuning),
    .io_radar_vco_enable                          (io_radar_vco_enable),
    .io_radar_vco_divEnable                       (io_radar_vco_divEnable),
    .io_radar_pa_enable                           (io_radar_pa_enable),
    .io_radar_pa_bypass                           (io_radar_pa_bypass),
    .io_radar_pa_inputMuxSel                      (io_radar_pa_inputMuxSel),
    .io_radar_clkOvrd                             (io_radar_clkOvrd)
  );
endmodule


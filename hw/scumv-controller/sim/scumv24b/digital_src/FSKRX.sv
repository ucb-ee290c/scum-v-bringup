// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module FSKRX(
  input         clock,
                reset,
  input  [7:0]  io_analog_i,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_analog_q,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_ble_sop,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_ble_eop,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_ble_data_valid,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [7:0]  io_ble_data_bits,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [31:0] io_ble_bitCount,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_lrwpan_sop,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_lrwpan_eop,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_lrwpan_data_valid,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [7:0]  io_lrwpan_data_bits,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [31:0] io_lrwpan_bitCount,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_control_enable,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_firCmd_valid,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [3:0]  io_firCmd_bits_fir,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [5:0]  io_firCmd_bits_coeff,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [21:0] io_firCmd_bits_value,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_radioMode,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [31:0] io_accessAddress,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [15:0] io_shr,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_bleLoopback,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_bleLoopBit,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_lrwpanLoopback,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_lrwpanLoopBit,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [31:0] io_ifCounter_input_ifTickThreshold,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_ifCounter_input_control_restartCounter,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [31:0] io_ifCounter_output_adcTicks,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_ifCounter_output_ifTicksPacket,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_ifCounter_output_adcTicksPacket,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_ifCounter_output_ifTicksPrevPacket,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_ifCounter_output_adcTicksPrevPacket,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_ifCounter_output_thresholdInterrupt,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_adcClockTuning_input_restart,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_input_mode,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [7:0]  io_adcClockTuning_input_duration,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [31:0] io_adcClockTuning_input_k_p,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_input_k_i,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_adcClockTuning_input_p_control_only,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [31:0] io_adcClockTuning_input_nominal_adc_clock_freq,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [7:0]  io_adcClockTuning_output_control_word,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [1:0]  io_adcClockTuning_output_sop_eop_debug,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [31:0] io_adcClockTuning_output_curr_calc_adc_clock_freq_debug,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [63:0] io_adcClockTuning_output_lo_start_debug,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_output_lo_stop_debug,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [31:0] io_adcClockTuning_output_adc_ticks_counter,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_output_f_err,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_output_accumulated_err,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_adcClockTuning_output_controller_active,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_output_trigger_controller,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output [9:0]  io_adcClockTuning_output_p_term_trunc,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
                io_adcClockTuning_output_i_term_trunc,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  output        io_adcClockTuning_output_controller_state,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input  [63:0] io_lo_counter,	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
  input         io_adc_clock	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
);

  wire        _ADCClockTuningInputQueue_io_deq_bits_restart;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire        _ADCClockTuningInputQueue_io_deq_bits_mode;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire [7:0]  _ADCClockTuningInputQueue_io_deq_bits_duration;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire [31:0] _ADCClockTuningInputQueue_io_deq_bits_k_p;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire [31:0] _ADCClockTuningInputQueue_io_deq_bits_k_i;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire        _ADCClockTuningInputQueue_io_deq_bits_p_control_only;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire [31:0] _ADCClockTuningInputQueue_io_deq_bits_nominal_adc_clock_freq;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
  wire [7:0]  _adc_clock_tuning_io_state_output_control_word;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [1:0]  _adc_clock_tuning_io_state_output_sop_eop_debug;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [31:0] _adc_clock_tuning_io_state_output_curr_calc_adc_clock_freq_debug;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [63:0] _adc_clock_tuning_io_state_output_lo_start_debug;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [63:0] _adc_clock_tuning_io_state_output_lo_stop_debug;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [31:0] _adc_clock_tuning_io_state_output_adc_ticks_counter;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [31:0] _adc_clock_tuning_io_state_output_f_err;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [31:0] _adc_clock_tuning_io_state_output_accumulated_err;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire        _adc_clock_tuning_io_state_output_controller_active;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire        _adc_clock_tuning_io_state_output_trigger_controller;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [9:0]  _adc_clock_tuning_io_state_output_p_term_trunc;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [9:0]  _adc_clock_tuning_io_state_output_i_term_trunc;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire        _adc_clock_tuning_io_state_output_controller_state;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
  wire [31:0] _ifCounterInputQueue_io_deq_bits_ifTickThreshold;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:131:35]
  wire        _ifCounterInputQueue_io_deq_bits_control_restartCounter;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:131:35]
  wire [31:0] _if_counter_io_state_output_adcTicks;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
  wire [31:0] _if_counter_io_state_output_ifTicksPacket;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
  wire [31:0] _if_counter_io_state_output_adcTicksPacket;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
  wire [31:0] _if_counter_io_state_output_ifTicksPrevPacket;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
  wire [31:0] _if_counter_io_state_output_adcTicksPrevPacket;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
  wire        _if_counter_io_state_output_thresholdInterrupt;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
  wire        _firCmdQueue_io_deq_valid;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
  wire [3:0]  _firCmdQueue_io_deq_bits_fir;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
  wire [5:0]  _firCmdQueue_io_deq_bits_coeff;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
  wire [21:0] _firCmdQueue_io_deq_bits_value;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
  wire        _lrwpan_pkt_detect_io_sop;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:84:33]
  wire        _ble_pkt_detect_io_sop;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:76:30]
  wire        _lrwpanCDRQueue_io_deq_valid;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:52:30]
  wire        _lrwpanCDRQueue_io_deq_bits;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:52:30]
  wire        _lrwpan_cdr_io_out_valid;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:51:51]
  wire        _lrwpan_cdr_io_out_bits;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:51:51]
  wire        _bleCDRQueue_io_deq_valid;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:50:27]
  wire        _bleCDRQueue_io_deq_bits;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:50:27]
  wire        _ble_cdr_io_out_valid;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:49:51]
  wire        _ble_cdr_io_out_bits;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:49:51]
  wire        _fsk_demod_io_out;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:44:50]
  reg         bleLoopback_REG;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:61]
  reg         bleLoopback;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:53]
  reg         lrwpanLoopback_REG;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:55:64]
  reg         lrwpanLoopback;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:55:56]
  reg  [31:0] ble_ctr;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:60:24]
  reg  [31:0] lrwpan_ctr;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:66:27]
  wire        _ble_pkt_detect_io_eop_T = io_ble_eop | io_radioMode | ~io_control_enable;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:73:62, :78:39]
  wire        _lrwpan_pkt_detect_io_eop_T = io_lrwpan_eop | ~io_radioMode | ~io_control_enable;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:73:62, :74:38, :86:45]
  always @(posedge io_adc_clock) begin	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:40:14]
    bleLoopback_REG <= io_bleLoopback;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:61]
    bleLoopback <= bleLoopback_REG;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:{53,61}]
    lrwpanLoopback_REG <= io_lrwpanLoopback;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:55:64]
    lrwpanLoopback <= lrwpanLoopback_REG;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:55:{56,64}]
  end // always @(posedge)
  always @(posedge clock) begin
    if (reset) begin
      ble_ctr <= 32'h0;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:60:24]
      lrwpan_ctr <= 32'h0;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:60:24, :66:27]
    end
    else begin
      if (_bleCDRQueue_io_deq_valid)	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:50:27]
        ble_ctr <= ble_ctr + 32'h1;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:60:24, :62:24]
      if (_lrwpanCDRQueue_io_deq_valid)	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:52:30]
        lrwpan_ctr <= lrwpan_ctr + 32'h1;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:62:24, :66:27, :68:30]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;
        end
        bleLoopback_REG = _RANDOM[2'h0][0];	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:61]
        bleLoopback = _RANDOM[2'h0][1];	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:{53,61}]
        lrwpanLoopback_REG = _RANDOM[2'h0][2];	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:61, :55:64]
        lrwpanLoopback = _RANDOM[2'h0][3];	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:61, :55:56]
        ble_ctr = {_RANDOM[2'h0][31:4], _RANDOM[2'h1][3:0]};	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:54:61, :60:24]
        lrwpan_ctr = {_RANDOM[2'h1][31:4], _RANDOM[2'h2][3:0]};	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:60:24, :66:27]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  FSKDemodulation fsk_demod (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:44:50]
    .clock                (io_adc_clock),
    .reset                (reset),
    .io_i                 (io_analog_i),
    .io_q                 (io_analog_q),
    .io_out               (_fsk_demod_io_out),
    .io_firCmd_valid      (_firCmdQueue_io_deq_valid),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
    .io_firCmd_bits_fir   (_firCmdQueue_io_deq_bits_fir),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
    .io_firCmd_bits_coeff (_firCmdQueue_io_deq_bits_coeff),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
    .io_firCmd_bits_value (_firCmdQueue_io_deq_bits_value)	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
  );
  CDR ble_cdr (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:49:51]
    .clock        (io_adc_clock),
    .reset        (reset),
    .io_in        (bleLoopback ? io_bleLoopBit : _fsk_demod_io_out),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:44:50, :54:53, :56:26]
    .io_out_valid (_ble_cdr_io_out_valid),
    .io_out_bits  (_ble_cdr_io_out_bits)
  );
  AsyncQueue_9 bleCDRQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:50:27]
    .io_enq_clock (io_adc_clock),
    .io_enq_reset (reset),
    .io_enq_valid (_ble_cdr_io_out_valid),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:49:51]
    .io_enq_bits  (_ble_cdr_io_out_bits),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:49:51]
    .io_deq_clock (clock),
    .io_deq_reset (reset),
    .io_deq_valid (_bleCDRQueue_io_deq_valid),
    .io_deq_bits  (_bleCDRQueue_io_deq_bits)
  );
  CDR_1 lrwpan_cdr (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:51:51]
    .clock        (io_adc_clock),
    .reset        (reset),
    .io_in        (lrwpanLoopback ? io_lrwpanLoopBit : _fsk_demod_io_out),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:44:50, :55:56, :57:26]
    .io_out_valid (_lrwpan_cdr_io_out_valid),
    .io_out_bits  (_lrwpan_cdr_io_out_bits)
  );
  AsyncQueue_9 lrwpanCDRQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:52:30]
    .io_enq_clock (io_adc_clock),
    .io_enq_reset (reset),
    .io_enq_valid (_lrwpan_cdr_io_out_valid),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:51:51]
    .io_enq_bits  (_lrwpan_cdr_io_out_bits),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:51:51]
    .io_deq_clock (clock),
    .io_deq_reset (reset),
    .io_deq_valid (_lrwpanCDRQueue_io_deq_valid),
    .io_deq_bits  (_lrwpanCDRQueue_io_deq_bits)
  );
  BLEPacketDetector ble_pkt_detect (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:76:30]
    .clock        (clock),
    .reset        (reset),
    .io_aa        (io_accessAddress),
    .io_sop       (_ble_pkt_detect_io_sop),
    .io_eop       (_ble_pkt_detect_io_eop_T),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:78:39]
    .io_in_valid  (_bleCDRQueue_io_deq_valid),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:50:27]
    .io_in_bits   (_bleCDRQueue_io_deq_bits),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:50:27]
    .io_out_valid (io_ble_data_valid),
    .io_out_bits  (io_ble_data_bits)
  );
  LRWPANPacketDetector lrwpan_pkt_detect (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:84:33]
    .clock        (clock),
    .reset        (reset),
    .io_shr       (io_shr),
    .io_sop       (_lrwpan_pkt_detect_io_sop),
    .io_eop       (_lrwpan_pkt_detect_io_eop_T),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:86:45]
    .io_in_valid  (_lrwpanCDRQueue_io_deq_valid),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:52:30]
    .io_in_bits   (_lrwpanCDRQueue_io_deq_bits),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:52:30]
    .io_out_valid (io_lrwpan_data_valid),
    .io_out_bits  (io_lrwpan_data_bits)
  );
  AsyncQueue_3 firCmdQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:93:27]
    .io_enq_clock      (clock),
    .io_enq_reset      (reset),
    .io_enq_valid      (io_firCmd_valid),
    .io_enq_bits_fir   (io_firCmd_bits_fir),
    .io_enq_bits_coeff (io_firCmd_bits_coeff),
    .io_enq_bits_value (io_firCmd_bits_value),
    .io_deq_clock      (io_adc_clock),
    .io_deq_reset      (reset),
    .io_deq_valid      (_firCmdQueue_io_deq_valid),
    .io_deq_bits_fir   (_firCmdQueue_io_deq_bits_fir),
    .io_deq_bits_coeff (_firCmdQueue_io_deq_bits_coeff),
    .io_deq_bits_value (_firCmdQueue_io_deq_bits_value)
  );
  IFCounter if_counter (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .clock                                 (io_adc_clock),
    .reset                                 (reset),
    .io_data                               (io_analog_i),
    .io_sop                                (io_radioMode ? _lrwpan_pkt_detect_io_sop : _ble_pkt_detect_io_sop),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:76:30, :84:33, :126:27]
    .io_state_input_ifTickThreshold        (_ifCounterInputQueue_io_deq_bits_ifTickThreshold),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:131:35]
    .io_state_input_control_restartCounter (_ifCounterInputQueue_io_deq_bits_control_restartCounter),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:131:35]
    .io_state_output_adcTicks              (_if_counter_io_state_output_adcTicks),
    .io_state_output_ifTicksPacket         (_if_counter_io_state_output_ifTicksPacket),
    .io_state_output_adcTicksPacket        (_if_counter_io_state_output_adcTicksPacket),
    .io_state_output_ifTicksPrevPacket     (_if_counter_io_state_output_ifTicksPrevPacket),
    .io_state_output_adcTicksPrevPacket    (_if_counter_io_state_output_adcTicksPrevPacket),
    .io_state_output_thresholdInterrupt    (_if_counter_io_state_output_thresholdInterrupt)
  );
  AsyncQueue_12 ifCounterInputQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:131:35]
    .io_enq_clock                       (clock),
    .io_enq_reset                       (reset),
    .io_enq_bits_ifTickThreshold        (io_ifCounter_input_ifTickThreshold),
    .io_enq_bits_control_restartCounter (io_ifCounter_input_control_restartCounter),
    .io_deq_clock                       (io_adc_clock),
    .io_deq_reset                       (reset),
    .io_deq_bits_ifTickThreshold        (_ifCounterInputQueue_io_deq_bits_ifTickThreshold),
    .io_deq_bits_control_restartCounter (_ifCounterInputQueue_io_deq_bits_control_restartCounter)
  );
  AsyncQueue_13 ifCounterOutputQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:141:36]
    .io_enq_clock                   (io_adc_clock),
    .io_enq_reset                   (reset),
    .io_enq_bits_adcTicks           (_if_counter_io_state_output_adcTicks),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .io_enq_bits_ifTicksPacket      (_if_counter_io_state_output_ifTicksPacket),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .io_enq_bits_adcTicksPacket     (_if_counter_io_state_output_adcTicksPacket),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .io_enq_bits_ifTicksPrevPacket  (_if_counter_io_state_output_ifTicksPrevPacket),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .io_enq_bits_adcTicksPrevPacket (_if_counter_io_state_output_adcTicksPrevPacket),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .io_enq_bits_thresholdInterrupt (_if_counter_io_state_output_thresholdInterrupt),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:127:52]
    .io_deq_clock                   (clock),
    .io_deq_reset                   (reset),
    .io_deq_bits_adcTicks           (io_ifCounter_output_adcTicks),
    .io_deq_bits_ifTicksPacket      (io_ifCounter_output_ifTicksPacket),
    .io_deq_bits_adcTicksPacket     (io_ifCounter_output_adcTicksPacket),
    .io_deq_bits_ifTicksPrevPacket  (io_ifCounter_output_ifTicksPrevPacket),
    .io_deq_bits_adcTicksPrevPacket (io_ifCounter_output_adcTicksPrevPacket),
    .io_deq_bits_thresholdInterrupt (io_ifCounter_output_thresholdInterrupt)
  );
  ADCClockTuning adc_clock_tuning (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .clock                                          (io_adc_clock),
    .reset                                          (reset),
    .io_sop                                         (io_radioMode ? _lrwpan_pkt_detect_io_sop : _ble_pkt_detect_io_sop),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:76:30, :84:33, :152:33]
    .io_eop                                         (io_radioMode ? _lrwpan_pkt_detect_io_eop_T : _ble_pkt_detect_io_eop_T),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:78:39, :86:45, :153:33]
    .io_lo_counter                                  (io_lo_counter),
    .io_state_input_restart                         (_ADCClockTuningInputQueue_io_deq_bits_restart),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_input_mode                            (_ADCClockTuningInputQueue_io_deq_bits_mode),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_input_duration                        (_ADCClockTuningInputQueue_io_deq_bits_duration),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_input_k_p                             (_ADCClockTuningInputQueue_io_deq_bits_k_p),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_input_k_i                             (_ADCClockTuningInputQueue_io_deq_bits_k_i),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_input_p_control_only                  (_ADCClockTuningInputQueue_io_deq_bits_p_control_only),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_input_nominal_adc_clock_freq          (_ADCClockTuningInputQueue_io_deq_bits_nominal_adc_clock_freq),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_state_output_control_word                   (_adc_clock_tuning_io_state_output_control_word),
    .io_state_output_sop_eop_debug                  (_adc_clock_tuning_io_state_output_sop_eop_debug),
    .io_state_output_curr_calc_adc_clock_freq_debug (_adc_clock_tuning_io_state_output_curr_calc_adc_clock_freq_debug),
    .io_state_output_lo_start_debug                 (_adc_clock_tuning_io_state_output_lo_start_debug),
    .io_state_output_lo_stop_debug                  (_adc_clock_tuning_io_state_output_lo_stop_debug),
    .io_state_output_adc_ticks_counter              (_adc_clock_tuning_io_state_output_adc_ticks_counter),
    .io_state_output_f_err                          (_adc_clock_tuning_io_state_output_f_err),
    .io_state_output_accumulated_err                (_adc_clock_tuning_io_state_output_accumulated_err),
    .io_state_output_controller_active              (_adc_clock_tuning_io_state_output_controller_active),
    .io_state_output_trigger_controller             (_adc_clock_tuning_io_state_output_trigger_controller),
    .io_state_output_p_term_trunc                   (_adc_clock_tuning_io_state_output_p_term_trunc),
    .io_state_output_i_term_trunc                   (_adc_clock_tuning_io_state_output_i_term_trunc),
    .io_state_output_controller_state               (_adc_clock_tuning_io_state_output_controller_state)
  );
  AsyncQueue_14 ADCClockTuningInputQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:159:40]
    .io_enq_clock                       (clock),
    .io_enq_reset                       (reset),
    .io_enq_bits_restart                (io_adcClockTuning_input_restart),
    .io_enq_bits_mode                   (io_adcClockTuning_input_mode),
    .io_enq_bits_duration               (io_adcClockTuning_input_duration),
    .io_enq_bits_k_p                    (io_adcClockTuning_input_k_p),
    .io_enq_bits_k_i                    (io_adcClockTuning_input_k_i),
    .io_enq_bits_p_control_only         (io_adcClockTuning_input_p_control_only),
    .io_enq_bits_nominal_adc_clock_freq (io_adcClockTuning_input_nominal_adc_clock_freq),
    .io_deq_clock                       (io_adc_clock),
    .io_deq_reset                       (reset),
    .io_deq_bits_restart                (_ADCClockTuningInputQueue_io_deq_bits_restart),
    .io_deq_bits_mode                   (_ADCClockTuningInputQueue_io_deq_bits_mode),
    .io_deq_bits_duration               (_ADCClockTuningInputQueue_io_deq_bits_duration),
    .io_deq_bits_k_p                    (_ADCClockTuningInputQueue_io_deq_bits_k_p),
    .io_deq_bits_k_i                    (_ADCClockTuningInputQueue_io_deq_bits_k_i),
    .io_deq_bits_p_control_only         (_ADCClockTuningInputQueue_io_deq_bits_p_control_only),
    .io_deq_bits_nominal_adc_clock_freq (_ADCClockTuningInputQueue_io_deq_bits_nominal_adc_clock_freq)
  );
  AsyncQueue_15 ADCClockTuningOutputQueue (	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:169:41]
    .io_enq_clock                               (io_adc_clock),
    .io_enq_reset                               (reset),
    .io_enq_bits_control_word                   (_adc_clock_tuning_io_state_output_control_word),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_sop_eop_debug                  (_adc_clock_tuning_io_state_output_sop_eop_debug),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_curr_calc_adc_clock_freq_debug (_adc_clock_tuning_io_state_output_curr_calc_adc_clock_freq_debug),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_lo_start_debug                 (_adc_clock_tuning_io_state_output_lo_start_debug),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_lo_stop_debug                  (_adc_clock_tuning_io_state_output_lo_stop_debug),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_adc_ticks_counter              (_adc_clock_tuning_io_state_output_adc_ticks_counter),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_f_err                          (_adc_clock_tuning_io_state_output_f_err),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_accumulated_err                (_adc_clock_tuning_io_state_output_accumulated_err),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_controller_active              (_adc_clock_tuning_io_state_output_controller_active),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_trigger_controller             (_adc_clock_tuning_io_state_output_trigger_controller),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_p_term_trunc                   (_adc_clock_tuning_io_state_output_p_term_trunc),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_i_term_trunc                   (_adc_clock_tuning_io_state_output_i_term_trunc),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_enq_bits_controller_state               (_adc_clock_tuning_io_state_output_controller_state),	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:154:58]
    .io_deq_clock                               (clock),
    .io_deq_reset                               (reset),
    .io_deq_bits_control_word                   (io_adcClockTuning_output_control_word),
    .io_deq_bits_sop_eop_debug                  (io_adcClockTuning_output_sop_eop_debug),
    .io_deq_bits_curr_calc_adc_clock_freq_debug (io_adcClockTuning_output_curr_calc_adc_clock_freq_debug),
    .io_deq_bits_lo_start_debug                 (io_adcClockTuning_output_lo_start_debug),
    .io_deq_bits_lo_stop_debug                  (io_adcClockTuning_output_lo_stop_debug),
    .io_deq_bits_adc_ticks_counter              (io_adcClockTuning_output_adc_ticks_counter),
    .io_deq_bits_f_err                          (io_adcClockTuning_output_f_err),
    .io_deq_bits_accumulated_err                (io_adcClockTuning_output_accumulated_err),
    .io_deq_bits_controller_active              (io_adcClockTuning_output_controller_active),
    .io_deq_bits_trigger_controller             (io_adcClockTuning_output_trigger_controller),
    .io_deq_bits_p_term_trunc                   (io_adcClockTuning_output_p_term_trunc),
    .io_deq_bits_i_term_trunc                   (io_adcClockTuning_output_i_term_trunc),
    .io_deq_bits_controller_state               (io_adcClockTuning_output_controller_state)
  );
  assign io_ble_sop = _ble_pkt_detect_io_sop;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:76:30]
  assign io_ble_bitCount = ble_ctr;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:60:24]
  assign io_lrwpan_sop = _lrwpan_pkt_detect_io_sop;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:84:33]
  assign io_lrwpan_bitCount = lrwpan_ctr;	// @[generators/baseband/src/main/scala/modem/FSKRX.scala:66:27]
endmodule


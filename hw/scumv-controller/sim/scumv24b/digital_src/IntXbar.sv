// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module IntXbar(
  input  auto_int_in_5_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_5_1,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_5_2,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_5_3,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_5_4,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_5_5,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_3_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_3_1,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_3_2,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_3_3,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_3_4,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_3_5,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_2_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_1,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_2,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_3,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_4,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_5,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_6,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_1_7,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_in_0_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
  output auto_int_out_0,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_1,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_2,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_3,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_4,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_5,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_6,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_7,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_8,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_9,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_10,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_11,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_12,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_13,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_14,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_15,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_21,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_22,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_23,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_24,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_25,	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
         auto_int_out_26	// @[generators/rocket-chip/src/main/scala/diplomacy/LazyModule.scala:366:18]
);

  assign auto_int_out_0 = auto_int_in_0_0;
  assign auto_int_out_1 = auto_int_in_1_0;
  assign auto_int_out_2 = auto_int_in_1_1;
  assign auto_int_out_3 = auto_int_in_1_2;
  assign auto_int_out_4 = auto_int_in_1_3;
  assign auto_int_out_5 = auto_int_in_1_4;
  assign auto_int_out_6 = auto_int_in_1_5;
  assign auto_int_out_7 = auto_int_in_1_6;
  assign auto_int_out_8 = auto_int_in_1_7;
  assign auto_int_out_9 = auto_int_in_2_0;
  assign auto_int_out_10 = auto_int_in_3_0;
  assign auto_int_out_11 = auto_int_in_3_1;
  assign auto_int_out_12 = auto_int_in_3_2;
  assign auto_int_out_13 = auto_int_in_3_3;
  assign auto_int_out_14 = auto_int_in_3_4;
  assign auto_int_out_15 = auto_int_in_3_5;
  assign auto_int_out_21 = auto_int_in_5_0;
  assign auto_int_out_22 = auto_int_in_5_1;
  assign auto_int_out_23 = auto_int_in_5_2;
  assign auto_int_out_24 = auto_int_in_5_3;
  assign auto_int_out_25 = auto_int_in_5_4;
  assign auto_int_out_26 = auto_int_in_5_5;
endmodule


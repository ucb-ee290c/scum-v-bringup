// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module AsyncQueueSource_34(
  input        clock,
               reset,
               io_enq_bits,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
  output       io_async_mem_0,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_1,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_2,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_3,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_4,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_5,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_6,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_7,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_8,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_9,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_10,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_11,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_12,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_13,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_14,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_15,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_16,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_17,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_18,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_19,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_20,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_21,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_22,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_23,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_24,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_25,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_26,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_27,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_28,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_29,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_30,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_mem_31,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
  input  [5:0] io_async_ridx,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
  output [5:0] io_async_widx,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
  input        io_async_safe_ridx_valid,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
  output       io_async_safe_widx_valid,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
               io_async_safe_source_reset_n,	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
  input        io_async_safe_sink_reset_n	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:71:14]
);

  wire       _sink_valid_io_out;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:104:30]
  wire       _sink_extend_io_out;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:103:30]
  wire       _source_valid_0_io_out;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:100:32]
  wire [5:0] _ridx_ridx_gray_io_q;	// @[generators/rocket-chip/src/main/scala/util/ShiftReg.scala:45:23]
  reg        mem_0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_1;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_2;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_3;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_4;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_5;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_6;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_7;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_8;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_9;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_10;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_11;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_12;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_13;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_14;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_15;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_16;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_17;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_18;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_19;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_20;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_21;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_22;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_23;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_24;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_25;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_26;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_27;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_28;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_29;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_30;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg        mem_31;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  reg  [5:0] widx_widx_bin;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25]
  reg        ready_reg;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:88:56]
  wire       io_enq_ready = ready_reg & _sink_valid_io_out;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:88:56, :89:29, :104:30]
  reg  [5:0] widx_gray;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:91:55]
  wire [4:0] index = widx_gray[4:0] ^ {widx_gray[5], 4'h0};	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:85:{52,64,80,93}, :91:55]
  always @(posedge clock) begin
    if (io_enq_ready & index == 5'h0)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :80:16, :85:64, :86:{22,35}, :89:29]
      mem_0 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h1)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_1 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h2)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_2 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h3)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_3 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h4)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_4 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h5)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_5 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h6)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_6 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h7)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_7 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h8)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_8 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h9)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_9 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'hA)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_10 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'hB)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_11 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'hC)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_12 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'hD)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_13 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'hE)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_14 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'hF)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_15 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h10)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_16 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h11)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_17 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h12)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_18 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h13)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_19 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h14)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_20 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h15)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_21 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h16)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_22 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h17)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_23 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h18)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_24 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h19)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_25 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h1A)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_26 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h1B)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_27 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h1C)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_28 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h1D)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_29 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & index == 5'h1E)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_30 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
    if (io_enq_ready & (&index))	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16, :85:64, :86:{22,35}, :89:29]
      mem_31 <= io_enq_bits;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  end // always @(posedge)
  wire [5:0] _widx_incremented_T = widx_widx_bin + {5'h0, io_enq_ready};	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :53:43, :89:29]
  wire [5:0] widx_incremented = _sink_valid_io_out ? _widx_incremented_T : 6'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:53:{23,43}, :104:30]
  wire [5:0] widx = {widx_incremented[5], widx_incremented[4:0] ^ widx_incremented[5:1]};	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:53:23, :54:{17,32}]
  always @(posedge clock or posedge reset) begin
    if (reset) begin
      widx_widx_bin <= 6'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :53:23]
      ready_reg <= 1'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:88:56]
      widx_gray <= 6'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:53:23, :91:55]
    end
    else begin
      if (_sink_valid_io_out)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:104:30]
        widx_widx_bin <= _widx_incremented_T;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :53:43]
      else	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:104:30]
        widx_widx_bin <= 6'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :53:23]
      ready_reg <= _sink_valid_io_out & widx != (_ridx_ridx_gray_io_q ^ 6'h30);	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:54:17, :83:{26,34,44}, :88:56, :104:30, generators/rocket-chip/src/main/scala/util/ShiftReg.scala:45:23]
      widx_gray <= widx;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:54:17, :91:55]
    end
  end // always @(posedge, posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:1];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;
        end
        mem_0 = _RANDOM[1'h0][0];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_1 = _RANDOM[1'h0][1];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_2 = _RANDOM[1'h0][2];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_3 = _RANDOM[1'h0][3];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_4 = _RANDOM[1'h0][4];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_5 = _RANDOM[1'h0][5];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_6 = _RANDOM[1'h0][6];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_7 = _RANDOM[1'h0][7];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_8 = _RANDOM[1'h0][8];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_9 = _RANDOM[1'h0][9];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_10 = _RANDOM[1'h0][10];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_11 = _RANDOM[1'h0][11];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_12 = _RANDOM[1'h0][12];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_13 = _RANDOM[1'h0][13];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_14 = _RANDOM[1'h0][14];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_15 = _RANDOM[1'h0][15];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_16 = _RANDOM[1'h0][16];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_17 = _RANDOM[1'h0][17];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_18 = _RANDOM[1'h0][18];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_19 = _RANDOM[1'h0][19];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_20 = _RANDOM[1'h0][20];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_21 = _RANDOM[1'h0][21];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_22 = _RANDOM[1'h0][22];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_23 = _RANDOM[1'h0][23];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_24 = _RANDOM[1'h0][24];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_25 = _RANDOM[1'h0][25];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_26 = _RANDOM[1'h0][26];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_27 = _RANDOM[1'h0][27];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_28 = _RANDOM[1'h0][28];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_29 = _RANDOM[1'h0][29];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_30 = _RANDOM[1'h0][30];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        mem_31 = _RANDOM[1'h0][31];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
        widx_widx_bin = _RANDOM[1'h1][5:0];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25]
        ready_reg = _RANDOM[1'h1][6];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :88:56]
        widx_gray = _RANDOM[1'h1][12:7];	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :91:55]
      `endif // RANDOMIZE_REG_INIT
      if (reset) begin
        widx_widx_bin = 6'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:52:25, :53:23]
        ready_reg = 1'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:88:56]
        widx_gray = 6'h0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:53:23, :91:55]
      end
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AsyncResetSynchronizerShiftReg_w6_d3_i0 ridx_ridx_gray (	// @[generators/rocket-chip/src/main/scala/util/ShiftReg.scala:45:23]
    .clock (clock),
    .reset (reset),
    .io_d  (io_async_ridx),
    .io_q  (_ridx_ridx_gray_io_q)
  );
  AsyncValidSync source_valid_0 (	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:100:32]
    .io_in  (1'h1),
    .io_out (_source_valid_0_io_out),
    .clock  (clock),
    .reset  (reset | ~io_async_safe_sink_reset_n)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:105:{43,46}]
  );
  AsyncValidSync source_valid_1 (	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:101:32]
    .io_in  (_source_valid_0_io_out),	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:100:32]
    .io_out (io_async_safe_widx_valid),
    .clock  (clock),
    .reset  (reset | ~io_async_safe_sink_reset_n)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:105:46, :106:43]
  );
  AsyncValidSync sink_extend (	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:103:30]
    .io_in  (io_async_safe_ridx_valid),
    .io_out (_sink_extend_io_out),
    .clock  (clock),
    .reset  (reset | ~io_async_safe_sink_reset_n)	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:105:46, :107:43]
  );
  AsyncValidSync sink_valid (	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:104:30]
    .io_in  (_sink_extend_io_out),	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:103:30]
    .io_out (_sink_valid_io_out),
    .clock  (clock),
    .reset  (reset)
  );
  assign io_async_mem_0 = mem_0;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_1 = mem_1;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_2 = mem_2;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_3 = mem_3;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_4 = mem_4;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_5 = mem_5;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_6 = mem_6;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_7 = mem_7;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_8 = mem_8;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_9 = mem_9;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_10 = mem_10;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_11 = mem_11;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_12 = mem_12;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_13 = mem_13;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_14 = mem_14;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_15 = mem_15;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_16 = mem_16;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_17 = mem_17;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_18 = mem_18;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_19 = mem_19;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_20 = mem_20;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_21 = mem_21;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_22 = mem_22;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_23 = mem_23;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_24 = mem_24;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_25 = mem_25;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_26 = mem_26;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_27 = mem_27;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_28 = mem_28;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_29 = mem_29;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_30 = mem_30;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_mem_31 = mem_31;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:80:16]
  assign io_async_widx = widx_gray;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:91:55]
  assign io_async_safe_source_reset_n = ~reset;	// @[generators/rocket-chip/src/main/scala/util/AsyncQueue.scala:121:27]
endmodule


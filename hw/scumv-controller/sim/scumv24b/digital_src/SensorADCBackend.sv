// Generated by CIRCT unknown git version
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for prints and assertions.

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

module SensorADCBackend(
  input         clock,
                reset,
                io_backend_status_status0_ready,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  output        io_backend_status_status0_valid,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  output [31:0] io_backend_status_status0_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
                io_backend_status_status1_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
                io_backend_status_status2_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
                io_backend_status_status3_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
                io_backend_status_status4_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
                io_backend_status_status5_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_backend_adc_data_out_ready,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  output        io_backend_adc_data_out_valid,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  output [23:0] io_backend_adc_data_out_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_backend_chopper_control_chopper_div_1_valid,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input  [24:0] io_backend_chopper_control_chopper_div_1_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_backend_chopper_control_chopper_div_2_valid,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input  [24:0] io_backend_chopper_control_chopper_div_2_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_backend_chopper_control_chopper_clock_en_valid,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input  [1:0]  io_backend_chopper_control_chopper_clock_en_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_backend_dsp_control_valid,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input  [7:0]  io_backend_dsp_control_bits,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_backend_auto_mux,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input  [5:0]  io_analog_adc_counter_p,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
                io_analog_adc_counter_n,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  output [31:0] io_analog_tuning_adc_tuning,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  output        io_analog_adc_sensor_out,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input         io_analog_adc_clock,	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
  input  [31:0] io_frontendTuning_adc_tuning	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
);

  wire        _dspControlFIFO_io_deq_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:202:30]
  wire [7:0]  _dspControlFIFO_io_deq_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:202:30]
  wire        _chopperClockEnFIFO_io_deq_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:186:34]
  wire [1:0]  _chopperClockEnFIFO_io_deq_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:186:34]
  wire        _chopperDiv2FIFO_io_deq_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:171:31]
  wire [24:0] _chopperDiv2FIFO_io_deq_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:171:31]
  wire        _chopperDiv1FIFO_io_deq_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:157:31]
  wire [24:0] _chopperDiv1FIFO_io_deq_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:157:31]
  wire        _dspChain_io_adc_data_out_valid;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire [23:0] _dspChain_io_adc_data_out_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire        _dspChain_io_chopper_clock_1;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire        _dspChain_io_chopper_clock_2;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire [7:0]  _dspChain_io_input_mux_ctrl;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire [6:0]  _dspChain_io_adc_counter_diff;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire [5:0]  _dspChain_io_adc_counter_p_diff;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  wire [5:0]  _dspChain_io_adc_counter_n_diff;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
  reg  [2:0]  shiftRegP_0;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_1;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_2;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_3;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_4;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_5;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_7;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_8;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_9;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_10;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_11;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_12;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_13;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_14;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegP_15;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
  reg  [2:0]  shiftRegN_0;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_1;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_2;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_3;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_4;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_5;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_7;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_8;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_9;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_10;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_11;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_12;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_13;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_14;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [2:0]  shiftRegN_15;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
  reg  [5:0]  counter_p;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28]
  reg  [5:0]  counter_n;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:62:28]
  reg  [5:0]  adc_counter_p_buf;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:116:36]
  reg  [5:0]  adc_counter_n_buf;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:117:36]
  reg  [7:0]  input_mux_bits;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:220:31]
  always @(posedge clock) begin
    if (reset) begin
      shiftRegP_0 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_1 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_2 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_3 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_4 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_5 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_6 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_7 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_8 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_9 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_10 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_11 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_12 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_13 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_14 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegP_15 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:{26,34}]
      shiftRegN_0 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_1 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_2 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_3 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_4 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_5 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_6 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_7 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_8 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_9 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_10 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_11 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_12 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_13 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_14 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      shiftRegN_15 <= 3'h6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:34, :37:26]
      input_mux_bits <= 8'h21;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:220:31]
    end
    else begin
      shiftRegP_0 <= io_analog_adc_counter_p[2:0];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :28:16]
      shiftRegP_1 <= shiftRegP_0;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_2 <= shiftRegP_1;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_3 <= shiftRegP_2;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_4 <= shiftRegP_3;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_5 <= shiftRegP_4;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_6 <= shiftRegP_5;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_7 <= shiftRegP_6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_8 <= shiftRegP_7;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_9 <= shiftRegP_8;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_10 <= shiftRegP_9;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_11 <= shiftRegP_10;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_12 <= shiftRegP_11;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_13 <= shiftRegP_12;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_14 <= shiftRegP_13;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegP_15 <= shiftRegP_14;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
      shiftRegN_0 <= io_analog_adc_counter_n[2:0];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26, :38:16]
      shiftRegN_1 <= shiftRegN_0;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_2 <= shiftRegN_1;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_3 <= shiftRegN_2;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_4 <= shiftRegN_3;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_5 <= shiftRegN_4;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_6 <= shiftRegN_5;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_7 <= shiftRegN_6;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_8 <= shiftRegN_7;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_9 <= shiftRegN_8;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_10 <= shiftRegN_9;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_11 <= shiftRegN_10;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_12 <= shiftRegN_11;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_13 <= shiftRegN_12;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_14 <= shiftRegN_13;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      shiftRegN_15 <= shiftRegN_14;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
      input_mux_bits <= io_backend_auto_mux ? _dspChain_io_input_mux_ctrl : io_frontendTuning_adc_tuning[31:24];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24, :220:31, :221:{24,102}]
    end
  end // always @(posedge)
  always @(posedge io_analog_adc_clock) begin	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
    if (reset) begin	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
      counter_p <= 6'h0;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28]
      counter_n <= 6'h0;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28, :62:28]
    end
    else begin	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:18:14]
      counter_p <= io_analog_adc_counter_p;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28]
      counter_n <= io_analog_adc_counter_n;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:62:28]
    end
    adc_counter_p_buf <= io_analog_adc_counter_p;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:116:36]
    adc_counter_n_buf <= io_analog_adc_counter_n;	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:117:36]
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:3];
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;
        end
        shiftRegP_0 = _RANDOM[2'h0][2:0];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_1 = _RANDOM[2'h0][5:3];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_2 = _RANDOM[2'h0][8:6];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_3 = _RANDOM[2'h0][11:9];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_4 = _RANDOM[2'h0][14:12];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_5 = _RANDOM[2'h0][17:15];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_6 = _RANDOM[2'h0][20:18];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_7 = _RANDOM[2'h0][23:21];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_8 = _RANDOM[2'h0][26:24];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_9 = _RANDOM[2'h0][29:27];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_10 = {_RANDOM[2'h0][31:30], _RANDOM[2'h1][0]};	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_11 = _RANDOM[2'h1][3:1];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_12 = _RANDOM[2'h1][6:4];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_13 = _RANDOM[2'h1][9:7];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_14 = _RANDOM[2'h1][12:10];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegP_15 = _RANDOM[2'h1][15:13];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26]
        shiftRegN_0 = _RANDOM[2'h1][18:16];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :37:26]
        shiftRegN_1 = _RANDOM[2'h1][21:19];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :37:26]
        shiftRegN_2 = _RANDOM[2'h1][24:22];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :37:26]
        shiftRegN_3 = _RANDOM[2'h1][27:25];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :37:26]
        shiftRegN_4 = _RANDOM[2'h1][30:28];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :37:26]
        shiftRegN_5 = {_RANDOM[2'h1][31], _RANDOM[2'h2][1:0]};	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:27:26, :37:26]
        shiftRegN_6 = _RANDOM[2'h2][4:2];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_7 = _RANDOM[2'h2][7:5];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_8 = _RANDOM[2'h2][10:8];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_9 = _RANDOM[2'h2][13:11];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_10 = _RANDOM[2'h2][16:14];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_11 = _RANDOM[2'h2][19:17];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_12 = _RANDOM[2'h2][22:20];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_13 = _RANDOM[2'h2][25:23];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_14 = _RANDOM[2'h2][28:26];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        shiftRegN_15 = _RANDOM[2'h2][31:29];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:37:26]
        counter_p = _RANDOM[2'h3][5:0];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28]
        counter_n = _RANDOM[2'h3][11:6];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28, :62:28]
        adc_counter_p_buf = _RANDOM[2'h3][17:12];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28, :116:36]
        adc_counter_n_buf = _RANDOM[2'h3][23:18];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28, :117:36]
        input_mux_bits = _RANDOM[2'h3][31:24];	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28, :220:31]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  DSPClockDomainWrapper dspChain (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
    .clock                                     (io_analog_adc_clock),
    .reset                                     (reset),
    .io_adc_counter_p                          (counter_p),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:61:28]
    .io_adc_counter_n                          (counter_n),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:62:28]
    .io_chopper_control_chopper_div_1_valid    (_chopperDiv1FIFO_io_deq_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:157:31]
    .io_chopper_control_chopper_div_1_bits     (_chopperDiv1FIFO_io_deq_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:157:31]
    .io_chopper_control_chopper_div_2_valid    (_chopperDiv2FIFO_io_deq_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:171:31]
    .io_chopper_control_chopper_div_2_bits     (_chopperDiv2FIFO_io_deq_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:171:31]
    .io_chopper_control_chopper_clock_en_valid (_chopperClockEnFIFO_io_deq_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:186:34]
    .io_chopper_control_chopper_clock_en_bits  (_chopperClockEnFIFO_io_deq_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:186:34]
    .io_dsp_control_valid                      (_dspControlFIFO_io_deq_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:202:30]
    .io_dsp_control_bits                       (_dspControlFIFO_io_deq_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:202:30]
    .io_adc_sensor_out                         (io_analog_adc_sensor_out),
    .io_adc_data_out_valid                     (_dspChain_io_adc_data_out_valid),
    .io_adc_data_out_bits                      (_dspChain_io_adc_data_out_bits),
    .io_chopper_clock_1                        (_dspChain_io_chopper_clock_1),
    .io_chopper_clock_2                        (_dspChain_io_chopper_clock_2),
    .io_input_mux_ctrl                         (_dspChain_io_input_mux_ctrl),
    .io_adc_counter_diff                       (_dspChain_io_adc_counter_diff),
    .io_adc_counter_p_diff                     (_dspChain_io_adc_counter_p_diff),
    .io_adc_counter_n_diff                     (_dspChain_io_adc_counter_n_diff)
  );
  BreakoutBuffer counter_p_buf (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:78:29]
    .clock  (clock),
    .reset  (reset),
    .io_in  (io_analog_adc_counter_p),
    .io_out (io_backend_status_status1_bits)
  );
  BreakoutBuffer counter_n_buf (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:82:29]
    .clock  (clock),
    .reset  (reset),
    .io_in  (io_analog_adc_counter_n),
    .io_out (io_backend_status_status2_bits)
  );
  BreakoutBuffer counter_p_diff_buf (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:86:34]
    .clock  (clock),
    .reset  (reset),
    .io_in  (_dspChain_io_adc_counter_p_diff),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
    .io_out (io_backend_status_status3_bits)
  );
  BreakoutBuffer counter_n_diff_buf (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:90:34]
    .clock  (clock),
    .reset  (reset),
    .io_in  (_dspChain_io_adc_counter_n_diff),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
    .io_out (io_backend_status_status4_bits)
  );
  BreakoutBuffer_4 counter_diff_buf (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:94:32]
    .clock  (clock),
    .reset  (reset),
    .io_in  (_dspChain_io_adc_counter_diff),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
    .io_out (io_backend_status_status5_bits)
  );
  AsyncQueue_24 status0FIFO (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:113:27]
    .io_enq_clock (io_analog_adc_clock),
    .io_enq_reset (reset),
    .io_enq_bits  ({20'h0, adc_counter_n_buf, adc_counter_p_buf}),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:116:36, :117:36, :118:29]
    .io_deq_clock (clock),
    .io_deq_reset (reset),
    .io_deq_ready (io_backend_status_status0_ready),
    .io_deq_valid (io_backend_status_status0_valid),
    .io_deq_bits  (io_backend_status_status0_bits)
  );
  AsyncQueue_25 adcDataOutFIFO (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:134:30]
    .io_enq_clock (io_analog_adc_clock),
    .io_enq_reset (reset),
    .io_enq_valid (_dspChain_io_adc_data_out_valid),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
    .io_enq_bits  (_dspChain_io_adc_data_out_bits),	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24]
    .io_deq_clock (clock),
    .io_deq_reset (reset),
    .io_deq_ready (io_backend_adc_data_out_ready),
    .io_deq_valid (io_backend_adc_data_out_valid),
    .io_deq_bits  (io_backend_adc_data_out_bits)
  );
  AsyncQueue_26 chopperDiv1FIFO (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:157:31]
    .io_enq_clock (clock),
    .io_enq_reset (reset),
    .io_enq_valid (io_backend_chopper_control_chopper_div_1_valid),
    .io_enq_bits  (io_backend_chopper_control_chopper_div_1_bits),
    .io_deq_clock (io_analog_adc_clock),
    .io_deq_reset (reset),
    .io_deq_valid (_chopperDiv1FIFO_io_deq_valid),
    .io_deq_bits  (_chopperDiv1FIFO_io_deq_bits)
  );
  AsyncQueue_26 chopperDiv2FIFO (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:171:31]
    .io_enq_clock (clock),
    .io_enq_reset (reset),
    .io_enq_valid (io_backend_chopper_control_chopper_div_2_valid),
    .io_enq_bits  (io_backend_chopper_control_chopper_div_2_bits),
    .io_deq_clock (io_analog_adc_clock),
    .io_deq_reset (reset),
    .io_deq_valid (_chopperDiv2FIFO_io_deq_valid),
    .io_deq_bits  (_chopperDiv2FIFO_io_deq_bits)
  );
  AsyncQueue_28 chopperClockEnFIFO (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:186:34]
    .io_enq_clock (clock),
    .io_enq_reset (reset),
    .io_enq_valid (io_backend_chopper_control_chopper_clock_en_valid),
    .io_enq_bits  (io_backend_chopper_control_chopper_clock_en_bits),
    .io_deq_clock (io_analog_adc_clock),
    .io_deq_reset (reset),
    .io_deq_valid (_chopperClockEnFIFO_io_deq_valid),
    .io_deq_bits  (_chopperClockEnFIFO_io_deq_bits)
  );
  AsyncQueue_29 dspControlFIFO (	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:202:30]
    .io_enq_clock (clock),
    .io_enq_reset (reset),
    .io_enq_valid (io_backend_dsp_control_valid),
    .io_enq_bits  (io_backend_dsp_control_bits),
    .io_deq_clock (io_analog_adc_clock),
    .io_deq_reset (reset),
    .io_deq_valid (_dspControlFIFO_io_deq_valid),
    .io_deq_bits  (_dspControlFIFO_io_deq_bits)
  );
  assign io_analog_tuning_adc_tuning = {input_mux_bits, io_frontendTuning_adc_tuning[23:16], 6'h0, _dspChain_io_chopper_clock_2, _dspChain_io_chopper_clock_1, io_frontendTuning_adc_tuning[7:0]};	// @[generators/scumv-sensor-adc/src/main/scala/sensoradc/SensorADCBackend.scala:49:24, :61:28, :220:31, :230:37, :231:33, :236:33]
endmodule

